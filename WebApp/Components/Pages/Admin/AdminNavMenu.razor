@using Microsoft.AspNetCore.Components;
@using MultiAppServer.ServiceDefaults
@inherits DynamicComponentContainer
@inject HttpClient Http
@inject IStringLocalizer<Localizer.Global> L

<MudNavMenu Style="flex: 1">
    <MudNavLink Href="@_navigationManager.ToAbsoluteUri(" ").AbsoluteUri" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">
        Frontend
    </MudNavLink>

    <MudNavLink Href="@_navigationManager.ToAbsoluteUri("admin").AbsoluteUri" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.BarChart">
        @L["Dashboard"]
    </MudNavLink>
    <MudNavGroup Title="@L["Settings"]">
        <MudNavLink Href="@_navigationManager.ToAbsoluteUri("admin/settings").AbsoluteUri" Icon="@Icons.Material.Filled.SettingsApplications">
            @L["MainSettings"]
        </MudNavLink>
        <MudNavLink Href="@_navigationManager.ToAbsoluteUri("admin/settings/email").AbsoluteUri" Icon="@Icons.Material.Filled.Email">
            @L["Email"]
        </MudNavLink>
    </MudNavGroup>
    <MudNavGroup Title="@L["Localization"]" Icon="@Icons.Material.Filled.Public">
        <MudNavLink Href="@_navigationManager.ToAbsoluteUri("admin/translations").AbsoluteUri" Icon="@Icons.Material.Filled.Translate">
            @L["Translations"]
        </MudNavLink>
        <MudNavLink Href="@_navigationManager.ToAbsoluteUri("admin/pluralizationrules").AbsoluteUri" Icon="@Icons.Material.Filled.Group">
            @L["Pluralization rules"]
        </MudNavLink>
    </MudNavGroup>
    <MudNavLink Href="@_navigationManager.ToAbsoluteUri("admin/users").AbsoluteUri" Icon="@Icons.Material.Filled.SupervisorAccount">
        @L["Users"]
    </MudNavLink>
    <MudNavLink Href="@_navigationManager.ToAbsoluteUri("admin/roles").AbsoluteUri" Icon="@Icons.Material.Filled.SupervisorAccount">
        @L["Roles"]
    </MudNavLink>
    @if (tenant.Id == DefaultTenant.DefaultTenantId)
    {
        <MudNavLink Href="@_navigationManager.ToAbsoluteUri("admin/multitenancy").AbsoluteUri" Icon="@Icons.Material.Filled.AccountBalance">
            @L["MultiTenancy"]
        </MudNavLink>
    }
    <MudNavGroup Title="@L["AppAdminNavMonitoring"]">
        <MudNavLink Href="@_navigationManager.ToAbsoluteUri("admin/apilog").AbsoluteUri" Icon="@Icons.Material.Filled.ChangeHistory">
            @L["AppAdminNavApiAuditLog"]
        </MudNavLink>
        <MudNavLink Href="@_navigationManager.ToAbsoluteUri("admin/dblog").AbsoluteUri" Icon="@Icons.Material.Filled.Notes">
            @L["AppAdminNavDBLoggingView"]
        </MudNavLink>
    </MudNavGroup>
    @foreach (var component in components)
    {
        @CreateDynamicComponent(component)
        ;
    }
</MudNavMenu>

@code {
    TenantDto tenant = new TenantDto();

    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    [Inject] protected IAccountApiClient accountApiClient { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var user = (await authenticationStateTask).User;

        if (user!.Identity!.IsAuthenticated)
        {
            var apiResponse = await accountApiClient.GetTenant();
            if (apiResponse.StatusCode == 200)
            {
                tenant = apiResponse.Result;
            }
        }
    }
}
