@* 
<EditForm Model="@RoleModel" OnValidSubmit="SaveAsync">
    <FluentValidationValidator @ref="_fluentValidationValidator" />
    <SfDialog>
        <Header>
            @{
                if (RoleModel.Id.ToString() == Guid.Empty.ToString())
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />
                        Add Role
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1" />
                        Update Role
                    </MudText>
                }
            }
        </Header>
        <DialogContent>
            <MudTextField For="@(() => RoleModel.Name)" @bind-Value="RoleModel.Name" Label="Role Name" />
            <MudTextField For="@(() => RoleModel.Description)" @bind-Value="RoleModel.Description" Label="Description" />
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" OnClick="Cancel">Cancel</MudButton>
            @{
                if (RoleModel.Id.ToString() == Guid.Empty.ToString())
                {
                    <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Disabled="@(!Validated)" Color="Color.Success">Save Role</MudButton>
                }
                else
                {
                    <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Disabled="@(!Validated)" Color="Color.Secondary">Update Role</MudButton>
                }
            }
        </DialogActions>
    </SfDialog>
</EditForm> *@

@code {
    // [CascadingParameter] private MudDialogInstance MudDialog { get; set; }

    [Parameter] public RoleDto RoleModel { get; set; } = new();

    private FluentValidationValidator _fluentValidationValidator;
    private bool Validated => _fluentValidationValidator.Validate(options => { options.IncludeAllRuleSets(); });

    public void Cancel()
    {
        // MudDialog.Cancel();
    }

    // protected override async Task OnInitializedAsync()
    // {
    //     //HubConnection = HubConnection.TryInitialize(_navigationManager, _localStorage);
    //     //if (HubConnection.State == HubConnectionState.Disconnected)
    //     //{
    //     //    await HubConnection.StartAsync();
    //     //}
    // }

    private async Task SaveAsync()
    {
        var response = RoleModel.Id == Guid.Empty ? await _accountApiClient.CreateRole(RoleModel) : await _accountApiClient.UpdateRole(RoleModel);
        if (response.IsSuccessStatusCode)
        {
            // viewNotifier.Show(response.Message, ViewNotifierType.Success);
            // MudDialog.Close();
        }
        else
        {
            // viewNotifier.Show(response.Message, ViewNotifierType.Error);
        }
    }
}